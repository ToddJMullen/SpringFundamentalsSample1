<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	 	http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd">
		
	<context:property-placeholder location="app.properties"/>
<!-- 	the location is a path, but since it's in resources/ 
	it will be placed at the root when compiled so no more path info is required -->

	<bean name="customerRepository"
		class="com.ps.repository.HibernateCustomerRepositoryImpl" >
		<property name="dbUsername" value="${dbUsername}"></property>	
	</bean>
		
	<bean name="customerService"
		class="com.ps.service.CustomerServiceImpl"
		autowire="byType"
		scope="prototype" >
<!-- 	Beans use singleton by default, but it can be set explicitly here -->
<!-- 	here we've set as prototype to use the logs in Application.java to see that it creates a new instance every time -->
<!-- 	autowire="byType" will look for a parameter that matches the type to be injected -->
<!-- 	autowire="byName" will look for the method to call based on the set{PropertyName} convention"" -->
<!-- 	<property name="customerRepository" ref="customerRepository"></property> -->
<!-- 	^^^^ setter injection property used to define the value to be used -->
<!-- 	<constructor-arg index="0" ref="customerRepository"></constructor-arg> -->
<!-- 	constructor injection is index based, so index determins arg # -->
<!-- 	both injection methods (child tags) can be used at the same time -->
	</bean>

</beans>
